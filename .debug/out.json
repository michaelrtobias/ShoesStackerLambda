{
  "statusCode": 500,
  "body": "{\"name\":\"SequelizeForeignKeyConstraintError\",\"parent\":{\"length\":547,\"name\":\"error\",\"severity\":\"ERROR\",\"code\":\"23503\",\"detail\":\"Key (collectionId)=(133) is not present in table \\\"collections\\\".\",\"where\":\"SQL statement \\\"INSERT INTO \\\"models\\\" (\\\"id\\\",\\\"name\\\",\\\"createdAt\\\",\\\"updatedAt\\\",\\\"collectionId\\\",\\\"brandId\\\") VALUES (DEFAULT,'lebron','2021-04-04 01:35:35.807 +00:00','2021-04-04 01:35:35.807 +00:00','133','1') RETURNING *\\\"\\nPL/pgSQL function pg_temp_4.testfunc() line 1 at SQL statement\",\"schema\":\"public\",\"table\":\"models\",\"constraint\":\"models_collectionId_fkey\",\"file\":\"ri_triggers.c\",\"line\":\"2479\",\"routine\":\"ri_ReportViolation\",\"sql\":\"CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response \\\"models\\\", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a810777f8dea4da3affdcc2b32bc7f2c$ BEGIN INSERT INTO \\\"models\\\" (\\\"id\\\",\\\"name\\\",\\\"createdAt\\\",\\\"updatedAt\\\",\\\"collectionId\\\",\\\"brandId\\\") VALUES (DEFAULT,'lebron','2021-04-04 01:35:35.807 +00:00','2021-04-04 01:35:35.807 +00:00','133','1') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a810777f8dea4da3affdcc2b32bc7f2c$ LANGUAGE plpgsql; SELECT (testfunc.response).\\\"id\\\", (testfunc.response).\\\"name\\\", (testfunc.response).\\\"createdAt\\\", (testfunc.response).\\\"updatedAt\\\", (testfunc.response).\\\"collectionId\\\", (testfunc.response).\\\"brandId\\\", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();\"},\"original\":{\"length\":547,\"name\":\"error\",\"severity\":\"ERROR\",\"code\":\"23503\",\"detail\":\"Key (collectionId)=(133) is not present in table \\\"collections\\\".\",\"where\":\"SQL statement \\\"INSERT INTO \\\"models\\\" (\\\"id\\\",\\\"name\\\",\\\"createdAt\\\",\\\"updatedAt\\\",\\\"collectionId\\\",\\\"brandId\\\") VALUES (DEFAULT,'lebron','2021-04-04 01:35:35.807 +00:00','2021-04-04 01:35:35.807 +00:00','133','1') RETURNING *\\\"\\nPL/pgSQL function pg_temp_4.testfunc() line 1 at SQL statement\",\"schema\":\"public\",\"table\":\"models\",\"constraint\":\"models_collectionId_fkey\",\"file\":\"ri_triggers.c\",\"line\":\"2479\",\"routine\":\"ri_ReportViolation\",\"sql\":\"CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response \\\"models\\\", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a810777f8dea4da3affdcc2b32bc7f2c$ BEGIN INSERT INTO \\\"models\\\" (\\\"id\\\",\\\"name\\\",\\\"createdAt\\\",\\\"updatedAt\\\",\\\"collectionId\\\",\\\"brandId\\\") VALUES (DEFAULT,'lebron','2021-04-04 01:35:35.807 +00:00','2021-04-04 01:35:35.807 +00:00','133','1') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a810777f8dea4da3affdcc2b32bc7f2c$ LANGUAGE plpgsql; SELECT (testfunc.response).\\\"id\\\", (testfunc.response).\\\"name\\\", (testfunc.response).\\\"createdAt\\\", (testfunc.response).\\\"updatedAt\\\", (testfunc.response).\\\"collectionId\\\", (testfunc.response).\\\"brandId\\\", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();\"},\"sql\":\"CREATE OR REPLACE FUNCTION pg_temp.testfunc(OUT response \\\"models\\\", OUT sequelize_caught_exception text) RETURNS RECORD AS $func_a810777f8dea4da3affdcc2b32bc7f2c$ BEGIN INSERT INTO \\\"models\\\" (\\\"id\\\",\\\"name\\\",\\\"createdAt\\\",\\\"updatedAt\\\",\\\"collectionId\\\",\\\"brandId\\\") VALUES (DEFAULT,'lebron','2021-04-04 01:35:35.807 +00:00','2021-04-04 01:35:35.807 +00:00','133','1') RETURNING * INTO response; EXCEPTION WHEN unique_violation THEN GET STACKED DIAGNOSTICS sequelize_caught_exception = PG_EXCEPTION_DETAIL; END $func_a810777f8dea4da3affdcc2b32bc7f2c$ LANGUAGE plpgsql; SELECT (testfunc.response).\\\"id\\\", (testfunc.response).\\\"name\\\", (testfunc.response).\\\"createdAt\\\", (testfunc.response).\\\"updatedAt\\\", (testfunc.response).\\\"collectionId\\\", (testfunc.response).\\\"brandId\\\", testfunc.sequelize_caught_exception FROM pg_temp.testfunc(); DROP FUNCTION IF EXISTS pg_temp.testfunc();\",\"fields\":null,\"table\":\"models\",\"index\":\"models_collectionId_fkey\"}"
}